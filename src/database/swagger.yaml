openapi: 3.0.0
info:
  title: Pick up store
  description: Pick up store - E-commerce
  version: 0.1.9

paths:
  /main:
    get:
      responses:
        "200":
          description: Successfully fetched
          content:
            application/json:
              schema:
                type: string

  /updateCart/{product_id}:
    put:
      summary: Update the amount of a product in the cart
      parameters:
        - in: path
          name: product_id
          required: true
          description: The ID of the product to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                new_amount:
                  type: integer
                  description: The new amount of the product in the cart
      responses:
        "200":
          description: The product was successfully updated in the cart

  /deleteProduct/{product_id}:
    delete:
      summary: Delete product from cart
      parameters:
        - in: path
          name: product_id
          required: true
          description: The ID of the product to delete
          schema:
            type: string
      responses:
        "200":
          description: The product was successfully deleted from the cart

  /makeOrder:
    post:
      summary: Make an order
      description: This endpoint allows a user to make an order by posting their cart products to the order list.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: The ID of the user making the order.
      responses:
        "200":
          description: Successfully posted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successfully posted!
        "500":
          description: Post failed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Post failed.
                  error:
                    type: object

  /uploadproduct:
    post:
      summary: "Upload Product with Images"
      consumes:
        - "multipart/form-data"
      parameters:
        - in: formData
          name: photo
          type: file
          required: true
          description: "Product images (PNG, JPG, JPEG)"
      responses:
        "200":
          description: "Product uploaded successfully"
        "400":
          description: "Invalid request format or image type"
        "500":
          description: "Internal server error"
